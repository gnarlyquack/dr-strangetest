TODO
====

This file lists all tasks required for the next release. Items that might be
desirable for future releases may be listed at the bottom of the file.


Release
-------
-   Review test suite

-   Niggles to test/check:

    -   What happens if we try to tokenize an empty file?

    -   Do we properly handle directories whose name matches against file name
        patterns?

    -   Do we properly handle traversing towards a target that may have a
        potentially ambiguous directory name in the path? E.g., the target is
        in "tests/test_foobar/test_target.php" and the test suite also has the
        directory "tests/test_foo" (which may or may not also include a file
        "test_target.php")

    -   Do we not discover/traverse symbolic links?

    -   Do we handle traversing multiple times to a directory, file, etc. that
        had a setup error?

-   Implement additional assertions? Currently EasyTest's test suite only
    uses/needs the assertions already provided by the framework, but
    presumably other assertions would be useful in other contexts

-   Test installing and running via Composer/Packagist

-   When trying to load Composer, only check the path(s) the autoloader would
    be if EasyTest had been installed via Composer(?). I.e., since EasyTest
    itself doesn't require Composer, we (might) never want/need to try loading
    Composer from our own source tree.

-   Handle errors during test file parsing

-   Error-checking for argument lists:
    -   setup fixtures must either return an iterable or an instance of
        ArgumentLists
    -   each arglist in ArgumentLists must be an iterable

-   Compress the token-processing loops in _parse_setup and _discover_file?

-   Cache results of directory (and file?) discovery

-   Why does/did this work on my computer?
    https://travis-ci.org/github/gnarlyquack/easytest/jobs/682216879

-   Individual paths probably still need some work:

    -   If (directory) setup fails, we'll probably end up in an infinite loop
        becuase the target index is not advanced thus causing the parent
        directory to simply retest the target.

    -   If the target is a directory or a file that is parameterized with
        multiple argument lists, and/or in a directory hierarchy where one or
        more directories in the hierarchy are parameterized with multiple
        argument lists, the target will probably only be run once because
        targets are processed within the argument list loop and, after the
        first run, the target index will have advanced past the target. Since
        directory discovery is recursive, we need to ensure this works for any
        arbitrary hierarchy of parameterized directories.


Future
------
-   Distribute EasyTest as a single executable (Phar?)

-   Add support for config files(?)

-   Implement additional CLI options(?)
    -   specify a config file
    -   reverse report output

-   diff: Limit number of lines that are reported before and after the
    differing portion of text

-   Implement "loose" diff/variable formatting for "loose" (==) comparisons?

-   Ensure we're UTF-8 conformant
    https://www.php.net/manual/en/migration71.windows-support.php#migration71.windows-support.long-and-utf8-path

-   Add additional verbosity levels? Most of this would only seem to be
    necessary to support testing... :-/
    -   "all" could show passed tests (in addition to skips and output)
    -   "debug" could show debug events in addiont to "all"


Wishlist / Someday
------------------
-   Improve diff algorithm
    -   "a high-performance library in multiple languages that manipulates
        plain text"
        https://github.com/google/diff-match-patch

    -   "Utility to do an N-way diff and N-way merge, for N > 2"
        https://github.com/Quuxplusone/difdef

-   Support calling assert() with arbitrary exceptions in PHP >= 7? It's not
    entirely clear what this would even entail: perhaps allow for outputting
    custom types of errors/failures?
